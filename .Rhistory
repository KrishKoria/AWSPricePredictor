library(shiny); runApp('predict.R')
runApp('predict.R')
library(shiny); runApp('predict.R')
gc()
library(shiny); runApp('predict.R')
library(shiny); runApp('predict.R')
library(shiny); runApp('predict.R')
library(shiny); runApp('predict.R')
library(shiny); runApp('predict.R')
library(shiny); runApp('predict.R')
library(shiny); runApp('predict.R')
runApp('predict.R')
runApp('predict.R')
library(shiny); runApp('predict.R')
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
# Check if data is available
if (!checkData()) {
showNotification("No data available for the selected criteria", type = "warning")
return()
}
withProgress(message = 'Building forecasting models...', value = 0, {
ts_data <- createData()
incProgress(0.2, detail = "Fitting models")
forecasts <- build_all_models(ts_data, conf_level)
# Store in shared data
shared_data$forecasts <- forecasts
shared_data$raw_data <- createData_1()
shared_data$ts_data <- ts_data
shared_data$time_of_day <- input$predint
incProgress(1, detail = "Done!")
})
runApp()
runApp()
runApp()
